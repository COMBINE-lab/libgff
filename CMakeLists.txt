CMAKE_MINIMUM_REQUIRED(VERSION 3.12)
PROJECT(gff)

set(ver_major 1)
set(ver_minor 3)
set(ver_patch 0)

set(CPACK_PACKAGE_VERSION_MAJOR ${ver_major})
set(CPACK_PACKAGE_VERSION_MINOR ${ver_minor})
set(CPACK_PACKAGE_VERSION_PATCH ${ver_patch})

set(CPACK_PACKAGE_VERSION "${ver_major}.${ver_minor}.${ver_patch}")
message("version: ${CPACK_PACKAGE_VERSION}")

set(PROJECT_VERSION ${CPACK_PACKAGE_VERSION})

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

SET(PROJECT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)
SET(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -O3 -Wall -D_FILE_OFFSET_BITS=64" )

SET(GFFLib_SRCS
    ${PROJECT_SOURCE_DIR}/codons.cpp
    ${PROJECT_SOURCE_DIR}/GArgs.cpp
    ${PROJECT_SOURCE_DIR}/GBase.cpp
    ${PROJECT_SOURCE_DIR}/gdna.cpp
    ${PROJECT_SOURCE_DIR}/GFaSeqGet.cpp
    ${PROJECT_SOURCE_DIR}/GFastaIndex.cpp
    ${PROJECT_SOURCE_DIR}/gff.cpp
    #${PROJECT_SOURCE_DIR}/gff_utils.cpp
    ${PROJECT_SOURCE_DIR}/GStr.cpp)

INCLUDE_DIRECTORIES(${PROJECT_INCLUDE_DIR})

ADD_LIBRARY(${PROJECT_NAME} STATIC ${GFFLib_SRCS})
ADD_EXECUTABLE(TestGFFParse ${PROJECT_SOURCE_DIR}/TestGFFParse.cpp)
TARGET_LINK_LIBRARIES(TestGFFParse ${PROJECT_NAME})

INSTALL(FILES ${CMAKE_BINARY_DIR}/lib${PROJECT_NAME}.a DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
INSTALL(DIRECTORY ${PROJECT_INCLUDE_DIR} DESTINATION ${CMAKE_INSTALL_PREFIX})
